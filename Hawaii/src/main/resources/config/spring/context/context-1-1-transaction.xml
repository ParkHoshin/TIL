<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- Transaction : Transaction이 Exception을 수신받았을 경우 rollback하라고 Datasource에게 알려준다(rollback는 Datasource가 한다) -->	
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	  <property name="dataSource" ref="ds"/>
	</bean>

	<!-- Advice : Advice가 Pointcut에게 통보받은 내용이 Exception이면 txManager에게 rollback하라고 알려준다 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED"  
			           rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
    
    <!-- Pointcut : 감시지점(대상)에서 Pointcut이 걸리면 txAdvice에게 알려준다 -->
	<aop:config>
		<aop:pointcut id="requiredTx" expression="execution( * service.*.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="requiredTx" />
	</aop:config>



</beans>
